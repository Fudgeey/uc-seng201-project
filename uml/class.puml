@startuml
'https://plantuml.com/class-diagram

class Tower implements Storable {
    - resourceType: Resource
    - resourceAmount
    - reloadSpeed
    - xp

    + getLevel(): Integer
    + applyUpgrade(Upgrade): void
}

class Cart {
    - size
    - resourceType
    - speed
}

class Round {
    - carts
    - difficulty

    + setDifficulty(): void
}

enum Difficulty {
    EASY
    MEDIUM
    HARD
}

enum Resource {
    WATER
    WOOD
    FOOD
}

abstract Upgrade implements Storable {
    - name
    - effectType
    - effectAmount
}

class ProductionUpgrade extends Upgrade {
}

class ReloadSpeedUpgrade extends Upgrade {
}


interface Storable {
    - cost
}

class Inventory {
    - activeTowers: ArrayList<Tower>
}

class GameManager {
    - playerName: string
    - roundCount: Integer
    - currentRound: Integer
    - difficulty: Difficulty
    - inventory: Inventory
    - setupScreenLauncher: Consumer<GameManager>
    - mainScreenLauncher: Consumer<GameManager>
    - clearScreen: Runnable
}

GameManager *- Difficulty
GameManager *- Inventory
Inventory o- Tower
@enduml